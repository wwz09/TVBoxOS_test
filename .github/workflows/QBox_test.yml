name: QBox_test

on:
 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: q215613905
            repoName: TVBoxOS
            branchName: main
            appName: QBox
          
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check New Commit
        run: |
          upStream=https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL $upStream/commits/${{ matrix.branchName }} |grep -o "/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+" |head -1 | cut -d\/ -f5)
          if ! grep -q "$commit" README.md || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi
      - name: Checkout Source Code and Zip
        if: ${{ env.commit }}
        run: |
          git clone ${{ env.upStream }} ${{ matrix.repoName }}
          cd ${{ matrix.repoName }}
          git checkout ${{ env.commit }}
          zip -q -x ".git/*" -r source.zip .
          
      - name: DIY
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          cp -rf $GITHUB_WORKSPACE/DIY/xwalk_shared_library-23.53.589.4.aar app/libs/xwalk_shared_library-23.53.589.4.aar
          cp -rf $GITHUB_WORKSPACE/DIY/thunder.jar app/libs/thunder.jar
          cp -rf $GITHUB_WORKSPACE/DIY/pyramid.aar app/libs/pyramid.aar
          cp -rf $GITHUB_WORKSPACE/DIY/png/drawable-hdpi/app_icon.png app/src/main/res/drawable-hdpi/app_icon.png
          cp -rf $GITHUB_WORKSPACE/DIY/png/drawable-xhdpi/app_icon.png app/src/main/res/drawable-xhdpi/app_icon.png
          cp -rf $GITHUB_WORKSPACE/DIY/png/drawable-xxhdpi/app_icon.png app/src/main/res/drawable-xxhdpi/app_icon.png
          cp -rf $GITHUB_WORKSPACE/DIY/png/drawable-xxxhdpi/app_icon.png app/src/main/res/drawable-xxxhdpi/app_icon.png
          cp -rf $GITHUB_WORKSPACE/DIY/png/app_bg.png app/src/main/res/drawable/app_bg.png
          sed -i 's%TVBox%QBox%g' app/src/main/res/values/strings.xml
          sed -i 's%(HawkConfig.API_URL, "");%(HawkConfig.API_URL, "https://0a.fit/bbNnz");%g' app/src/main/java/com/github/tvbox/osc/api/ApiConfig.java  
             
      - name: Release Apk Sign
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          signingConfigs='ICAgIHNpZ25pbmdDb25maWdzIHtcCiAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICBteUNvbmZpZyB7XAogICAgICAgICAgICAgICAgc3RvcmVGaWxlIGZpbGUoUkVMRUFTRV9TVE9SRV9GSUxFKVwKICAgICAgICAgICAgICAgIHN0b3JlUGFzc3dvcmQgUkVMRUFTRV9TVE9SRV9QQVNTV09SRFwKICAgICAgICAgICAgICAgIGtleUFsaWFzIFJFTEVBU0VfS0VZX0FMSUFTXAogICAgICAgICAgICAgICAga2V5UGFzc3dvcmQgUkVMRUFTRV9LRVlfUEFTU1dPUkRcCiAgICAgICAgICAgICAgICB2MVNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICB2MlNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICBlbmFibGVWM1NpZ25pbmcgPSB0cnVlXAogICAgICAgICAgICAgICAgZW5hYmxlVjRTaWduaW5nID0gdHJ1ZVwKICAgICAgICAgICAgfVwKICAgICAgICB9XAogICAgfVwKXA=='
          signingConfig='ICAgICAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICAgICAgc2lnbmluZ0NvbmZpZyBzaWduaW5nQ29uZmlncy5teUNvbmZpZ1wKICAgICAgICAgICAgfVwK'
          signingConfigs="$(echo "$signingConfigs" |base64 -d )"
          signingConfig="$(echo "$signingConfig" |base64 -d )"
          sed -i -e "/defaultConfig /i\\$signingConfigs " -e "/debug /a\\$signingConfig " -e "/release /a\\$signingConfig " app/build.gradle
          cp -f ${{ github.workspace }}/.github/workflows/TVBoxOSC.jks app/TVBoxOSC.jks
          sed -i '$a\RELEASE_STORE_FILE=./TVBoxOSC.jks'     ./gradle.properties
          sed -i '$a\RELEASE_KEY_ALIAS=TVBoxOSC'            ./gradle.properties
          sed -i '$a\RELEASE_STORE_PASSWORD=TVBoxOSC'       ./gradle.properties
          sed -i '$a\RELEASE_KEY_PASSWORD=TVBoxOSC'         ./gradle.properties
          
      - name: Build With Gradle
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          chmod +x gradlew
          ./gradlew assemblerelease --build-cache --parallel --daemon --warning-mode all
          
      - name: Prepare App
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          rm -rf apk/
          mkdir -p apk/
          for file in `find ~ -name "*.apk" -print`; do
            mv "$file" apk/${{ matrix.appName }}_${{ env.tag }}.apk
          done
          
      - name: Upload App To Artifact
        uses: actions/upload-artifact@v3
        if: ${{ env.commit }}
        with:
          name: ${{ matrix.appName }}
          path: ${{ matrix.repoName }}/apk/*
          
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "${{ matrix.repoName }}/apk/*.apk"
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
 

     
          
      
        
     
      
      
